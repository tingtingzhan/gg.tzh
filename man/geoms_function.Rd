% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geoms_function.R
\name{geoms_function}
\alias{geoms_function}
\title{Multiple Function Geoms}
\usage{
geoms_function(
  fun,
  dots = list(),
  args = split_list_(dots),
  labels = getval_(args),
  aes_ = "colour",
  ...
)
}
\arguments{
\item{fun}{a continuous \link[base]{function}, see usage in function \link[ggplot2]{stat_function}}

\item{dots}{\link[base]{list} of parameters in a user-friendly manner,
e.g., \code{list(mean=0, sd=1:2)} for two normal distributions
\eqn{N(0,1)} and \eqn{N(0,2)}}

\item{args}{\link[base]{list} of parameters in a programmer-friendly manner,
e.g., \code{list(a=list(mean=0, sd=1), b=list(mean=0, sd=2))}
for two normal distributions
\eqn{N(0,1)} and \eqn{N(0,2)} labeled as \code{'a'} and \code{'b'}, respectively}

\item{labels}{\link[base]{character} \link[base]{vector},
user-friendly text description of the parameters}

\item{aes_}{\link[base]{character} scalar or \link[base]{vector},
\link[ggplot2]{aes}thetic mapping(s) to be activated.
Default \code{'colour'}, i.e., parameters are discriminated using different colors.
Another good choice is \code{c('colour', 'linetype')}, i.e., parameters are discriminated using different colors and line-types.}

\item{...}{argument of function \link[ggplot2]{geom_function}.
Also see parameter \code{params} of function \link[ggplot2]{layer}}
}
\value{
Function \link{geoms_function} returns a \link[base]{list} of
\link[ggplot2]{geom_function}
\link[ggplot2]{layer}s.
}
\description{
Multiple function \emph{\strong{geom}}etric objects
(\link[ggplot2]{geom_function}s)
with different parameters.
}
\examples{
library(ggplot2)
theme_set(theme(
 legend.position = 'inside',
 legend.position.inside = c(.15, .6),
 legend.key.spacing.y = grid::unit(.01, units = 'npc'),
 legend.background = element_rect(color = 'grey95')
))

ggplot() + geom_function(fun = dnorm, args = list(mean=0, sd=1)) + xlim(-3,3)
ggplot() + geoms_function(dnorm, dots = list(mean=0:1)) + xlim(-3,4)
ggplot() + geoms_function(dnorm, dots = list(mean=0, sd=c(1,1.3)), n=501L) + xlim(-5,5)
ggplot() + geoms_function(dnorm, dots=list(mean=0:1, sd=c(1,.9)), 
  labels = letters[1:2], aes_ = 'linetype') + xlim(-5,5)
ggplot() + geoms_function(dt, dots = list(df=c(1,2,5,Inf))) + 
  xlim(-4,4)
ggplot() + geoms_function(dchisq, dots = list(df=c(1,3,5,10))) + 
  xlim(0,5) + ylim(0,1) + theme(legend.position.inside = c(.6,.6)) 
ggplot() + geoms_function(dgamma, dots = list(shape=1:4)) + 
  xlim(0,5) + theme(legend.position.inside = c(.8,.6))

# developer's use
ggplot() + geoms_function(dnorm, args = list(
 list(mean=0, sd=1), 
 list(mean=1, sd=1.3)
), labels = c('beta', 'alpha')) + xlim(-5,5)

# manually, without function [geoms_function]
ggplot() + 
 geom_function(fun = dnorm, args = list(mean=0, sd=1), 
  mapping = aes(color = 'beta')) +
 geom_function(fun = dnorm, args = list(mean=1, sd=1.3), 
  mapping = aes(color = 'alpha')) +
 xlim(-5,5)
# but the order of labels are wrong 
# .. i.e., automatically alphabetical, not what we want
}
