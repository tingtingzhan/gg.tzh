% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paths_function.R
\name{paths_function}
\alias{paths_function}
\title{Multiple Function Geoms}
\usage{
paths_function(
  fun,
  dots = list(),
  args = .mapply(dots, FUN = list, MoreArgs = NULL),
  label,
  hjust = 0.5,
  parse = is.expression(label),
  aes_ = "colour",
  ...
)
}
\arguments{
\item{fun}{a continuous \link[base]{function}, see usage in function \link[ggplot2]{stat_function}}

\item{dots}{user-friendly \link[base]{list} of parameters,
e.g., \code{list(mean=0, sd=1:2)} for two normal distributions
\eqn{N(0,1)} and \eqn{N(0,2)}}

\item{args}{\link[base]{list} of parameters in a programmer-friendly manner,
e.g., \code{list(list(mean=0, sd=1), list(mean=0, sd=2))}
for two normal distributions
\eqn{N(0,1)} and \eqn{N(0,2)}}

\item{label}{\link[base]{character} \link[base]{vector},
user-friendly text description of the parameters}

\item{hjust}{\link[base]{double} scalar or \link[base]{vector}}

\item{parse}{\link[base]{logical} scalar}

\item{aes_}{\link[base]{character} scalar or \link[base]{vector},
\link[ggplot2]{aes}thetic mapping(s) to be activated.
Default \code{'colour'}, i.e., parameters are discriminated using different colors.
Another good choice is \code{c('colour', 'linetype')}, i.e., parameters are discriminated using different colors and line-types.}

\item{...}{argument of function \link[ggplot2]{stat_function}.
Also see parameter \code{params} of function \link[ggplot2]{layer}}
}
\value{
Function \code{\link[=paths_function]{paths_function()}} returns a \link[base]{list} of
\link[ggplot2]{layer}s.
}
\description{
Multiple function \emph{\strong{geom}}etric objects
(\link[ggplot2]{geom_function}s)
with different parameters.
}
\examples{
options(use_unicode = FALSE) # CRAN requirement

library(latex2exp)

ggplot() + stat_function(fun = dnorm, args = list(mean=0, sd=1)) + xlim(-3,3)

ggplot() + paths_function(dnorm, dots = list(mean=1:0), 
  label = TeX(c('$mu_1=1$', '$mu_0=0$'))) + xlim(-3,4)

ggplot() + paths_function(
  fun = dnorm, dots = list(mean = 0, sd = c(1, 1.3)), 
  aes_ = c('color', 'linetype'), size = 2
) + xlim(-5, 5)

ggplot() + paths_function(dt, dots = list(df=c(1,2,5,Inf)), size = 2.5) + xlim(-4,4)
ggplot() + paths_function(dchisq, dots = list(df = c(1,3,5,10)), 
  hjust = c(.2,.25,.5,.55), size = 3) + xlim(.2,8)
ggplot() + paths_function(dgamma, dots = list(shape = 1:4), hjust = .15, size = 3) + xlim(0,5)

}
